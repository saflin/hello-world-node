@NonCPS
def String getChangedFileList() {
  changedFiles = []
  for (changeLogSet in currentBuild.changeSets) {
    for (entry in changeLogSet.getItems()) {
       for(file in entry.getAffectedFiles()) {
          changedFiles.add(file.getPath())  
       }     
    }
  }
}

pipeline {
  agent {
    kubernetes {
      label "jenkins-pod-agent"
      defaultContainer("jnlp")
      yamlFile 'ci/pod.yaml'
    }
  }
  stages {
    stage('Check') {
      steps {
        container('node') {
          sh 'npm version'
        }
      }
    }
    stage('Build') {
      steps {
        container('node') {
          sh 'npm install'
        }
      }
    }

    stage('Publish') {
      when { branch 'master' }
      steps {
        withCredentials([file(credentialsId: 'npm-access-file', variable: 'npmauth'),
        usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
            container('node') {
                script {
                    def changeLogSets = currentBuild.changeSets
                    echo("**changeSets=" + changeLogSets)
                    for (int i = 0; i < changeLogSets.size(); i++) {
                         def entries = changeLogSets[i].items
                         for (int j = 0; j < entries.length; j++) {
                             def entry = entries[j]
                             echo "** ${entry.commitId} by ${entry.author} on ${new Date(entry.timestamp)}: ${entry.msg}"
                             def files = new ArrayList(entry.affectedFiles)
                             for (int k = 0; k < files.size(); k++) {
                                 def file = files[k]
                                 echo "** ${file.editType.name} ${file.path}"
                             }
                         }
                    }
                }
                sh '''
                    apt update && apt install -y git
                    git config --global safe.directory $WORKSPACE
                    git config --global user.email "saflin.ph@gmail.com"
                    git config --global user.name "${GIT_USERNAME}"
                    git config --global user.password "${GIT_TOKEN}"
                    git checkout -b master origin/master
                    cat $npmauth > .npmrc
                   ''' 
                sh 'npm version minor'
                sh 'npm publish --registry http://35.197.217.72:8081/repository/npm-private/ --userconfig=./.npmrc'
                sh 'git push origin master'
            }
        }
      }
    }
  }

  post {
    always {
        cleanWs()
    }
  }
}